<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Aplicacion', 'doctrine');

/**
 * BaseAplicacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $descripcion
 * @property Doctrine_Collection $AplicacionPais
 * @property Doctrine_Collection $Funcion
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getDescripcion()    Returns the current record's "descripcion" value
 * @method Doctrine_Collection getAplicacionPais() Returns the current record's "AplicacionPais" collection
 * @method Doctrine_Collection getFuncion()        Returns the current record's "Funcion" collection
 * @method Aplicacion          setId()             Sets the current record's "id" value
 * @method Aplicacion          setDescripcion()    Sets the current record's "descripcion" value
 * @method Aplicacion          setAplicacionPais() Sets the current record's "AplicacionPais" collection
 * @method Aplicacion          setFuncion()        Sets the current record's "Funcion" collection
 * 
 * @package    sodimac
 * @subpackage model
 * @author     Rodrigo Campos H. rodrigo <at> webdevel <dot> cl
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAplicacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('aplicacion');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AplicacionPais', array(
             'local' => 'id',
             'foreign' => 'id_aplicacion'));

        $this->hasMany('Funcion', array(
             'local' => 'id',
             'foreign' => 'id_aplicacion'));
    }
}