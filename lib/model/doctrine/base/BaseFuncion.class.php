<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Funcion', 'doctrine');

/**
 * BaseFuncion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_aplicacion
 * @property string $descripcion
 * @property Aplicacion $Aplicacion
 * @property Doctrine_Collection $FuncionPais
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getIdAplicacion()  Returns the current record's "id_aplicacion" value
 * @method string              getDescripcion()   Returns the current record's "descripcion" value
 * @method Aplicacion          getAplicacion()    Returns the current record's "Aplicacion" value
 * @method Doctrine_Collection getFuncionPais()   Returns the current record's "FuncionPais" collection
 * @method Funcion             setId()            Sets the current record's "id" value
 * @method Funcion             setIdAplicacion()  Sets the current record's "id_aplicacion" value
 * @method Funcion             setDescripcion()   Sets the current record's "descripcion" value
 * @method Funcion             setAplicacion()    Sets the current record's "Aplicacion" value
 * @method Funcion             setFuncionPais()   Sets the current record's "FuncionPais" collection
 * 
 * @package    sodimac
 * @subpackage model
 * @author     Rodrigo Campos H. rodrigo <at> webdevel <dot> cl
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFuncion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('funcion');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_aplicacion', 'integer', null, array(
             'type' => 'integer',
             'primary' => false,
             'notnull' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Aplicacion', array(
             'local' => 'id_aplicacion',
             'foreign' => 'id'));

        $this->hasMany('FuncionPais', array(
             'local' => 'id',
             'foreign' => 'id_funcion'));
    }
}