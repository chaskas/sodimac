<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EncuestaCabeceraRespuestas', 'doctrine');

/**
 * BaseEncuestaCabeceraRespuestas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_enc_cab_resp
 * @property string $nro_boleta
 * @property timestamp $fecha_compra
 * @property integer $id_tienda
 * @property integer $rut
 * @property string $dv
 * @property string $nombre_completo
 * @property string $ciudad
 * @property string $telefono
 * @property string $celular
 * @property string $email
 * @property integer $edad
 * @property string $sexo
 * @property string $compra_para
 * @property Doctrine_Collection $EncuestaRespuestas
 * 
 * @method integer                    getIdEncCabResp()       Returns the current record's "id_enc_cab_resp" value
 * @method string                     getNroBoleta()          Returns the current record's "nro_boleta" value
 * @method timestamp                  getFechaCompra()        Returns the current record's "fecha_compra" value
 * @method integer                    getIdTienda()           Returns the current record's "id_tienda" value
 * @method integer                    getRut()                Returns the current record's "rut" value
 * @method string                     getDv()                 Returns the current record's "dv" value
 * @method string                     getNombreCompleto()     Returns the current record's "nombre_completo" value
 * @method string                     getCiudad()             Returns the current record's "ciudad" value
 * @method string                     getTelefono()           Returns the current record's "telefono" value
 * @method string                     getCelular()            Returns the current record's "celular" value
 * @method string                     getEmail()              Returns the current record's "email" value
 * @method integer                    getEdad()               Returns the current record's "edad" value
 * @method string                     getSexo()               Returns the current record's "sexo" value
 * @method string                     getCompraPara()         Returns the current record's "compra_para" value
 * @method Doctrine_Collection        getEncuestaRespuestas() Returns the current record's "EncuestaRespuestas" collection
 * @method EncuestaCabeceraRespuestas setIdEncCabResp()       Sets the current record's "id_enc_cab_resp" value
 * @method EncuestaCabeceraRespuestas setNroBoleta()          Sets the current record's "nro_boleta" value
 * @method EncuestaCabeceraRespuestas setFechaCompra()        Sets the current record's "fecha_compra" value
 * @method EncuestaCabeceraRespuestas setIdTienda()           Sets the current record's "id_tienda" value
 * @method EncuestaCabeceraRespuestas setRut()                Sets the current record's "rut" value
 * @method EncuestaCabeceraRespuestas setDv()                 Sets the current record's "dv" value
 * @method EncuestaCabeceraRespuestas setNombreCompleto()     Sets the current record's "nombre_completo" value
 * @method EncuestaCabeceraRespuestas setCiudad()             Sets the current record's "ciudad" value
 * @method EncuestaCabeceraRespuestas setTelefono()           Sets the current record's "telefono" value
 * @method EncuestaCabeceraRespuestas setCelular()            Sets the current record's "celular" value
 * @method EncuestaCabeceraRespuestas setEmail()              Sets the current record's "email" value
 * @method EncuestaCabeceraRespuestas setEdad()               Sets the current record's "edad" value
 * @method EncuestaCabeceraRespuestas setSexo()               Sets the current record's "sexo" value
 * @method EncuestaCabeceraRespuestas setCompraPara()         Sets the current record's "compra_para" value
 * @method EncuestaCabeceraRespuestas setEncuestaRespuestas() Sets the current record's "EncuestaRespuestas" collection
 * 
 * @package    sodimac
 * @subpackage model
 * @author     Rodrigo Campos H. rodrigo <at> webdevel <dot> cl
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEncuestaCabeceraRespuestas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('encuesta_cabecera_respuestas');
        $this->hasColumn('id_enc_cab_resp', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'notnull' => false,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nro_boleta', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('fecha_compra', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_tienda', 'integer', null, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('rut', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dv', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('nombre_completo', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('ciudad', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('telefono', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             ));
        $this->hasColumn('celular', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('edad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sexo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('compra_para', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('EncuestaRespuestas', array(
             'local' => 'id_enc_cab_resp',
             'foreign' => 'id_enc_cab_resp'));
    }
}